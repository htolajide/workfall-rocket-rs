name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo
    
    # strategy:
    #   matrix:
    #     node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Build Rocket application
        run: cargo build --release

      # - name: 'Upload Artifact'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build-step-output
      #     path: |
      #       /target/release/workfall-rocket-rs
      #     retention-days: 1

  deploy:
    runs-on: ubuntu-latest

    needs: [build]

    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    steps:
      - uses: actions/checkout@v3

      # - name: Download build step artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: build-step-output

      - name: Generate deployment package
        run: zip deploy.zip -r src Dockerfile Cargo.toml diesel.toml migrations .dockerignore

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: rust-rocket-app
          environment_name: Rustrocketapp-env
          version_label: ${{ github.sha }}
          region: us-east-1
          deployment_package: deploy.zip
          use_existing_version_if_available: true

